name: lidarr

on:
  workflow_dispatch:
  push:
    branches:
    - main
    paths:
    - '.github/workflows/lidarr.yaml'
    - 'lidarr/**'
    - '!lidarr/*.md'
  pull_request:
    paths:
    - '.github/workflows/lidarr.yaml'
    - 'lidarr/**'
    - '!lidarr/*.md'
    types:
    - opened
    - reopened

env:
  REGISTRY_IMAGE: ${{ github.workflow }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Prepare
      id: prep
      run: |
        VERSION=$(cat ${{ github.workflow }}/.version)
        echo ::set-output name=version::${VERSION}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
        version: latest
        driver-opts: image=moby/buildkit:master

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Build and Push (PR)
      if: github.event_name == 'pull_request'
      uses: docker/build-push-action@v2
      with:
        build-args: VERSION=${{ steps.prep.outputs.version }}
        context: .
        file: ./${{ github.workflow }}/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: false # GitHub secrets not available in PRs
        tags: |
          ghcr.io/${{ github.repository_owner }}/pull-request:${{github.event.number}}

    - name: Build and Push (non PR)
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v2
      with:
        build-args: VERSION=${{ steps.prep.outputs.version }}
        context: .
        file: ./${{ github.workflow }}/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:latest
          ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:v${{ steps.prep.outputs.version }}
