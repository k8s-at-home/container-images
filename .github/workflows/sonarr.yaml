name: sonarr

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/sonarr.yaml'
      - 'sonarr/**'
      - '!sonarr/*.md'
  pull_request:
    paths:
      - '.github/workflows/sonarr.yaml'
      - 'sonarr/**'
      - '!sonarr/*.md'
    types:
      - opened
      - reopened

env:
  REGISTRY_IMAGE: k8sathome/${{ github.workflow }}
  # How long to sleep before running the tests (gives the application time to start)
  GOSS_SLEEP: 30

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          VERSION=$(cat ${{ github.workflow }}/.version)
          echo ::set-output name=version::${VERSION}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master

      - name: Set up goss/dgoss
        uses: e1himself/goss-installation-action@v1.0.3
        with:
          version: 'v0.3.16'

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        if: github.ref != 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          build-args: VERSION=${{ steps.prep.outputs.version }}
          context: .
          file: ./${{ github.workflow }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            k8sathome/pull-request:${{github.event.number}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build local single-platform for testing
        if: github.ref != 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          build-args: VERSION=${{ steps.prep.outputs.version }}
          context: .
          file: ./${{ github.workflow }}/Dockerfile
          load: true
          tags: |
            k8sathome/pull-request:${{github.event.number}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Test image
        if: github.ref != 'refs/heads/main'
        env:
          GOSS_FILE: ${{ github.workflow }}/goss.yaml
        run: |
          dgoss run k8sathome/pull-request:${{github.event.number}}

      - name: Build and Push
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          build-args: VERSION=${{ steps.prep.outputs.version }}
          context: .
          file: ./${{ github.workflow }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY_IMAGE }}:latest
            ${{ env.REGISTRY_IMAGE }}:v${{ steps.prep.outputs.version }}
