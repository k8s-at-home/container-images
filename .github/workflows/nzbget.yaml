name: nzbget

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/nzbget.yaml'
      - 'nzbget/**'
      - '!nzbget/*.md'
  pull_request:
    paths:
      - '.github/workflows/nzbget.yaml'
      - 'nzbget/**'
      - '!nzbget/*.md'
    types:
      - opened
      - reopened

env:
  REGISTRY_IMAGE: ${{ github.workflow }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          VERSION=$(cat ${{ github.workflow }}/.version)
          echo ::set-output name=version::${VERSION}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push
        if: github.ref != 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          build-args: VERSION=${{ steps.prep.outputs.version }}
          context: .
          file: ./${{ github.workflow }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/k8s-at-home/pull-request:${{github.event.number}}

      - name: Build and Push
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          build-args: VERSION=${{ steps.prep.outputs.version }}
          context: .
          file: ./${{ github.workflow }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            k8sathome/${{ env.REGISTRY_IMAGE }}:latest
            k8sathome/${{ env.REGISTRY_IMAGE }}:v${{ steps.prep.outputs.version }}
            ghcr.io/k8s-at-home/${{ env.REGISTRY_IMAGE }}:latest
            ghcr.io/k8s-at-home/${{ env.REGISTRY_IMAGE }}:v${{ steps.prep.outputs.version }}
