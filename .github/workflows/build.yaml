name: Build-Test-Publish

on:
  workflow_dispatch:
  push:
    branches:
    - main
  pull_request:
    types:
    - opened
    - reopened

env:
  # How long to sleep before running the tests (gives the application time to start)
  GOSS_SLEEP: 30

jobs:
  detect_changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      matrix: "{\"container\": ${{ steps.detect_changes.outputs.matrix }} }"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate matrix
        id: detect_changes
        uses: ReyahSolutions/matrix-git-generator@v1
        with:
          filters: |
            **

  build:
    name: Build
    runs-on: ubuntu-20.04
    needs: [detect_changes]
    strategy:
      matrix: ${{fromJson(needs.detect_changes.outputs.matrix)}}
      fail-fast: true 
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
 
    - name: Prepare
      id: prep
      run: |
        VERSION=$(cat ${{ matrix.container }}/.version)
        echo ::set-output name=version::${VERSION}
        if test -f "${{ matrix.container }}/goss.yaml"; then
          echo ::set-output name=goss::true
        else
          echo ::set-output name=goss::false
        fi
 
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all
 
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
        version: latest
        driver-opts: image=moby/buildkit:master
 
    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}
 
    - name: Set up goss/dgoss
      uses: e1himself/goss-installation-action@v1.0.3
      if: ${{ steps.prep.outputs.goss == 'true' }}
      with:
        version: 'v0.3.16'
 
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
 
    - name: Build and Push (PR)
      if: github.event_name == 'pull_request'
      uses: docker/build-push-action@v2
      with:
        build-args: VERSION=${{ steps.prep.outputs.version }}
        context: .
        file: ./${{ matrix.container }}/Dockerfile
        platforms: linux/amd64
        push: false # GitHub secrets not available in PRs
        tags: |
          ghcr.io/${{ github.repository_owner }}/pull-request:${{github.event.number}}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
 
    - name: Build local single-platform for testing (PR)
      if: github.event.number != ''
      uses: docker/build-push-action@v2
      with:
        build-args: VERSION=${{ steps.prep.outputs.version }}
        context: .
        file: ./${{ matrix.container }}/Dockerfile
        load: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/pull-request:${{github.event.number}}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
 
    - name: Test image 
      if: ${{ github.event.number != '' && steps.prep.outputs.goss  == 'true' }}
      env:
        GOSS_FILE: ${{ matrix.container }}/goss.yaml
      run: |
        dgoss run ghcr.io/${{ github.repository_owner }}/pull-request:${{github.event.number}}
 
    - name: Build and Push (non PR)
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v2
      with:
        build-args: VERSION=${{ steps.prep.outputs.version }}
        context: .
        file: ./${{ matrix.container }}/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ matrix.container }}:latest
          ghcr.io/${{ github.repository_owner }}/${{ matrix.container }}:v${{ steps.prep.outputs.version }}
